
simulation.cycles CYCLES 
network.size SIZE
random.seed 1234567890
network.node.appgroup_protocol group
network.node.universe_protocol universe

CYCLES 5
SIZE 10
CYCLELENGTH 500
CRASH 0.5

#####################################Protocol#################################

protocol.geolocation it.polimi.peersim.protocols.GeoLocation

protocol.link IdleProtocol

protocol.discovery it.polimi.peersim.protocols.DiscoveryProtocol
{
	geolocation_protocol geolocation
	
	#the larger more neighbors
	discovery_radius 4
	
	# discovery listeners
	universe_protocol universe
	grouping_protocol grouping
}

protocol.channel it.polimi.peersim.protocols.MockChannel
{
	protocol_id channel
	lower_protocol_id channel
}

protocol.tuplespace it.polimi.peersim.protocols.TupleSpaceProtocol
{
	protocol_id tuplespace
	lower_protocol_id channel
}

protocol.universe it.polimi.peersim.protocols.UniverseProtocol
{
	protocol_id universe
	lower_protocol_id tuplespace
	discovery_protocol discovery
	follower_threshold 3
	follower_thresholdrate 2
}

protocol.routing it.polimi.peersim.protocols.RoutingProtocol
{
	protocol_id routing
	lower_protocol_id universe
}

protocol.grouping it.polimi.peersim.protocols.GroupingProtocol
{
	protocol_id grouping
	lower_protocol_id routing
	universe_protocol universe
}


protocol.app it.polimi.peersim.protocols.AppProtocol
{
	grouping_protocol grouping
	START_GROUP_CYCLE 2
}


##########################################Initializer###########################



#init.geoinit it.polimi.peersim.initializers.GeoInitializer
#{
#	geolocation_protocol geolocation
#	plot_protocol geolocation
#}

#init.universeinit it.polimi.peersim.initializers.UniverseInitializer
#{
#	universe_protocol universe 
#	discovery_protocol discovery
#}

init.protocolinit it.polimi.peersim.initializers.ProtocolStackInitializer
{
	universe_protocol universe 
	discovery_protocol discovery
	geolocation_protocol geolocation
}

############################################Control############################

#control.crash DynamicNetwork


control.implementedcrash it.polimi.peersim.controls.CrashControl
{
 RandNI
  add -CRASH*SIZE
  CRASH_CYCLE 4
  #We keep a minimum number of nodes for our network
  #minsize 5+(SIZE*0.1)
  
  #ONLY FOR THE FIRST CYCLE REMOVE THE NODES(cycle 0)
  #minsize SIZE-(SIZE*CRASH)
   minsize 5
}



control.io it.polimi.peersim.observers.GeoObserver
{
	plot_protocol geolocation
	protocol link
	discovery_protocol discovery
	universe_protocol universe
	file_base graph
	include degree
}



#order.control congestion crash io