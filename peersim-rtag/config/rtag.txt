
simulation.cycles CYCLES 
network.size SIZE
random.seed 1234567890

CYCLES 5
SIZE 50
CYCLELENGTH 100
CRASH 0.2

#####################################Protocol#################################

protocol.geolocation it.polimi.peersim.protocols.GeoLocation

protocol.link IdleProtocol

protocol.discovery it.polimi.peersim.protocols.DiscoveryProtocol
{
	geolocation_protocol geolocation
	discovery_radius 3
	#the larger more neighbors
	universe_protocol universe
}


protocol.universe it.polimi.peersim.protocols.UniverseProtocol
{
universe_protocol universe
discovery_protocol discovery
follower_threshold 2
}



##########################################Initializer###########################

init.geoinit it.polimi.peersim.initializers.GeoInitializer
init.geoinit.geolocation_protocol geolocation
init.geoplot.plot_protocol geolocation


init.universeinit it.polimi.peersim.initializers.UniverseInitializer
{
 universe_protocol universe 
 discovery_protocol discovery
 
}

############################################Control############################

control.crash DynamicNetwork
{
  RandNI
  add -CRASH*SIZE
  #We keep a minimum number of nodes for our network
  #minsize 5+(SIZE*0.1)
  
  #ONLY FOR THE FIRST CYCLE REMOVE THE NODES(cycle 0)
  #minsize SIZE-(SIZE*CRASH)
   minsize 10
}



control.io it.polimi.peersim.observers.GeoObserver
{
plot_protocol geolocation
protocol link
discovery_protocol discovery
universe_protocol universe
file_base graph
include degree
}


#control.discovery it.polimi.peersim.controls.DiscoveryController
#{
#	discovery_protocol discovery
#}

#control.group  it.polimi.peersim.controls.GroupController
#{
#	group_protocol group
#}


control.congestion it.polimi.peersim.controls.ThresholdController
{
	universe_protocol universe
}

#control.wire it.polimi.peersim.controls.WirePrtag
#{
#wireprtag_protocol link
#discovery_protocol discovery
#}


order.control crash congestion io